# foo.si

ps = __builtin_prints;
pp = __builtin_printp;
pi = __builtin_printi;
sa = __builtin_stack_alloc;

[[ program_entry ]]
main = proc(argc: s32, argv: **char) {
    @argv = "my new argv[0]";

    ps(argv[0]); ps("\n");

    loop i = 0; i < argc; i += 1 {
        arg = argv[i];
        dup_arg(arg);
    }
}

dup_arg = proc(arg: *char) {
    len = 0;

    loop ; arg[len] != cast(char, 0) ; {
        len += 1;
    }

    total_len = len * len;

    ps("len:       "); pi(len);       ps("\n");
    ps("total_len: "); pi(total_len); ps("\n");

    buff = sa(cast(u64, total_len + 1));

    pp(buff); ps("\n");

    buffp = cast(*char, buff);
    loop i = 0; i < len; i += 1 {
        loop j = 0; j < len; j += 1 {
            @buffp  = cast(char, 97); # arg[i];
            buffp  += 1;
        }
    }

    buff[total_len] = cast(u8, 0);
    # @buffp = cast(char, 0);
    ps(cast(*char, buff)); ps("\n");
    # ps(arg); ps(": "); pi(len); ps("\n");
}
